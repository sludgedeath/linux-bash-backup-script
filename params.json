{
  "name": "Linux-bash-backup-script",
  "tagline": "linux bash backup script",
  "body": "**linux bash backup script**\r\n\r\nIncremental and rotating linux bash backup script which keeps original folder structure and does not overwrite unchanged files.\r\nUses no compression.\r\n***\r\n**Setup**\r\n\r\n* edit `DAYS`, `TARGET` and `SOURCE` in bash.sh\r\n\r\n* edit `crontab parameters` in install.sh\r\n\r\n* `chmod +x install.sh && ./install.sh`\r\n***\r\n\r\n**backup.sh**\r\n```bash\r\n#!/bin/bash\r\nDAYS=7\r\n\r\nTARGET='/media/'$(whoami)'/Backup'\r\n\r\nSOURCE=(\r\n\t'/home/'$(whoami)'/dev'\r\n\t'/home/share/database'\r\n\t'/home/share/txt'\r\n\t'/home/share/web'\r\n)\r\n\r\n\r\n##############################################################################################\r\n#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\\/#\r\n##############################################################################################\r\n\r\n\r\nif [ ! -d $TARGET ]; then\r\n\tlogger \"backup storage medium not found:\" $TARGET \r\n\texit\r\nfi\r\n\r\n\r\ncopy_ () {\r\n\tfil=$1\r\n\ttstamp=$(stat $fil -c %y | cut -d \".\" -f1 |  sed -e  's/-//g; s/://; s/\\ //g; s/:/\\./')\r\n\tcp $file $TARGET$fil\r\n\ttouch -mt $tstamp $TARGET$fil\r\n}\r\n\r\nlogger \"backup is backing up files now:\" $TARGET \r\n#rm unneeded dates\r\nfolders_count=$(ls $TARGET | wc -l)\r\nif (( $folders_count > $DAYS )); then\r\n\tfor rm_folder in $(ls $TARGET -t | tail -n $(( $folders_count - $DAYS )) );do\r\n\t\trm -r $TARGET'/'$rm_folder\r\n\tdone\r\nfi\r\n\r\n#mk todays dir\r\ndir_='/'$(date +\"%d-%m-%y\")\r\nif [ ! -d $dir_ ];then\r\n\tmkdir -p $TARGET$dir_\r\nfi\r\n\r\n\r\nTARGET=$TARGET$dir_\r\n\r\n#rm files from Backup\r\nfor files in $(find $TARGET -type f);do\r\n\tsourcefile=$(echo $files|sed 's|'$TARGET'||'g )\r\n\tif [ ! -f $sourcefile ] ;then\r\n\t\trm $TARGET$sourcefile\r\n\tfi\r\ndone\r\n#rm dirs from Backup\r\nfor dir in $(find $TARGET -type d);do\r\n\tsourcefile=$(echo $dir|sed 's|'$TARGET'||'g )\r\n\tif [ ! -d $sourcefile ] ;then\r\n\t\trm -r $TARGET$sourcefile\r\n\tfi\r\ndone\r\n\r\nfor files in ${SOURCE[@]}; do\r\n\t#mkdirs on Backup\r\n\tfor dir in $(find $files -type d); do\r\n\t\tif [ ! -d $TARGET$dir ]; then\r\n\t\t\tmkdir -p $TARGET$dir\r\n\t\tfi\r\n\tdone\r\n\t#file operations\r\n\tfor file in $(find $files -type f); do\r\n\t\tif [ ! -f $TARGET$file ]; then\r\n\t\t\tcopy_ $file\t\t\r\n\t\telse\r\n\t\t\tlm_o=$(stat $file -c %Y)\r\n\t\t\tlm_b=$(stat $TARGET$file -c %Y)\r\n\t\t\tif [ $lm_o != $lm_b ];then\r\n\t\t\t\tcopy_ $file\r\n\t\t\tfi\r\n\t\tfi \r\n\tdone\r\ndone\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n**install.sh**\r\n```bash\r\n#!/bin/sh\r\n\r\nmkdir -p '/home/'$(whoami)'/.backup' \r\ncp 'backup.sh' '/home/'$(whoami)'/.backup' \r\nchmod +x '/home/'$(whoami)'/.backup/backup.sh'\r\n\r\n\r\ncrontab -l > '/tmp/ccron'\r\nif grep -q \"#backup\" \"/tmp/ccron\";then\r\n\techo \"#backup cron job exists\"\r\nelse\r\n\techo \"adding new cron job\"\r\n\techo '55 0-23/2 * * * /home/'$(whoami)'/.backup/backup.sh #backup' >> '/tmp/ccron'\r\n\tcrontab '/tmp/ccron'\r\nfi\r\n\r\nrm '/tmp/ccron'\r\n\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}